services:
  localstack:
    image: localstack/localstack:1.4.0
    container_name: localstack
    ports:
      - '4566:4566' # LocalStack main port
      # - '4571:4571' # API optional port
    environment:
      SERVICES: s3
      DEBUG: '1'
      PERSISTENCE: '1'
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
      LAMBDA_EXECUTOR: local #If you wish to avoid mounting the Docker socket and you're not using services that require it, you can set this
    volumes:
      - './localstack/data:/var/lib/localstack'
      # - '/var/run/docker.sock:/var/run/docker.sock'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:4566/_localstack/health']
      interval: 30s
      timeout: 20s
      retries: 3

  init-localstack:
    image: amazon/aws-cli
    entrypoint: ['bash', '/init.sh']
    depends_on:
      localstack:
        condition: service_healthy
    volumes:
      - './init.sh:/init.sh'
    environment:
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
      AWS_REGION: us-east-1
    command: []

  keycloak:
    image: quay.io/keycloak/keycloak:21.1.1
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/bgames
      KC_DB_USERNAME: bgames
      KC_DB_PASSWORD: burgundy
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: true
      KC_HTTPS_ENABLED: false
    ports:
      - '8080:8080'
    depends_on:
      - postgres
    command:
      - start-dev

  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: bgames
      POSTGRES_USER: bgames
      POSTGRES_PASSWORD: burgundy
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data:
